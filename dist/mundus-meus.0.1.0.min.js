/*! MundusMeus by Adam Timberlake created on 2013-08-03 */
"use strict";var app=angular.module("mundusMeusApp",[]);app.controller("GeolocationController",["$scope","$http","$interpolate","$timeout","$mundusMeus",function($scope,$http,$interpolate,$timeout,$mundusMeus){var URL_GEOLOCATE="./../api/Geolocate/{{location}}";$scope.results=[],$scope.active=!1,$scope.location=null,$scope.detectionAllowed=navigator.geolocation?!0:!1,$scope.radii=[{name:"1 mile",value:1},{name:"2 miles",value:2},{name:"5 miles",value:5},{name:"10 miles",value:10},{name:"25 miles",value:25}],$scope.radius=$scope.radii[3],$scope.setRadius=function(radius){$mundusMeus.setRadius(radius.value)},$scope.setGeolocation=function(data){$mundusMeus.toLocation(data.latitude,data.longitude),$mundusMeus.setGeolocation(data)},$scope.getGeolocation=function(name){$scope.noResults=!1;var getResults=function(){var url=$scope.$eval($interpolate(URL_GEOLOCATE));$http.get(url).success(function(data){return 0===data.length?($scope.noResults=!0,void 0):($scope.results=data,1===$scope.results.length&&($scope.setGeolocation($scope.results[0]),$timeout(function(){$mundusMeus.openSearchResults()},800)),void 0)})};return"undefined"==typeof name?(navigator.geolocation.getCurrentPosition(function(position){$scope.location=position.coords.latitude+","+position.coords.longitude,$scope.$apply(),getResults()}),void 0):($scope.location=name,getResults(),void 0)}}]),app.controller("SearchController",["$scope","$http","$interpolate","$mundusMeus",function($scope,$http,$interpolate,$mundusMeus){var URL_SEARCH="./../api/Search/{{position.latitude}}/{{position.longitude}}/{{radius}}";$scope.active=!1,$scope.results=[],$scope.radius=null,$scope.model={},$scope.position={latitude:null,longitude:null},$scope.isActive=function(model){return $scope.model===model},$scope.findMarker=function(model){$scope.model=model,$mundusMeus.highlightMarker(model),$mundusMeus.toLocation(model.latitude,model.longitude)},$scope.$on("locationFromMarker",function(context,model){$scope.findMarker(model),$scope.$apply();var position=$scope.results.sort(function(a,b){return a.distance-b.distance}).indexOf(model)+3;$("ul.search").scrollTo("li:eq("+position+")",550)}),$scope.$on("radiusUpdated",function(context,radius){$scope.radius=radius}),$scope.$on("locationUpdated",function(context,data){$scope.position.latitude=data.latitude,$scope.position.longitude=data.longitude,$scope.noResults=!1;var url=$scope.$eval($interpolate(URL_SEARCH));$http.get(url).success(function(data){0===data.length&&($scope.noResults=!0),$scope.results=data,$scope.display=!0,$mundusMeus.plotMarkers(data,{latitude:$scope.position.latitude,longitude:$scope.position.longitude})})}),$scope.$on("displaySearchResults",function(){$scope.active=!0})}]),app.controller("MapController",["$scope","$mundusMeus",function(){}]),app.directive("map",["$mundusMeus",function(){var allMarkers=[];return{restrict:"E",link:function($scope,$element){var mapElement=$element[0],map=L.map(mapElement,{center:[51.505,-.09],zoom:13}),tileUrl=mapElement.getAttribute("data-tiles")||"http://mt1.google.com/vt/lyrs=m@110&hl=pl&x={x}&y={y}&z={z}";L.tileLayer(tileUrl).addTo(map),$scope.$on("highlightMarker",function(context,model){allMarkers.forEach(function(item){var classList=item.marker._icon.classList;return item.model===model?(classList.add("active"),void 0):(classList.remove("active"),void 0)})}),$scope.$on("positionUpdate",function(context,latitude,longitude){map.panTo(new L.LatLng(latitude,longitude))}),$scope.$on("plotMarkers",function(context,models,homeLocation){var latLongBounds=[];allMarkers.forEach(function(item){map.removeLayer(item.marker)}),allMarkers.length=0,models.forEach(function(model){var icon=L.divIcon({className:"marker-icon",size:[100,100]}),marker=L.marker([model.latitude,model.longitude],{icon:icon}).addTo(map);marker.on("click",function(){$scope.$emit("markerSelected",model)}),allMarkers.push({model:model,marker:marker}),latLongBounds.push([model.latitude,model.longitude])});var icon=L.divIcon({className:"marker-icon is-home",size:[100,100]}),marker=L.marker([homeLocation.latitude,homeLocation.longitude],{icon:icon}).addTo(map);allMarkers.push({model:homeLocation,marker:marker}),latLongBounds.push([homeLocation.latitude,homeLocation.longitude]),latLongBounds.length>0&&map.fitBounds([latLongBounds])})}}}]),app.directive("findLocation",function(){return{restrict:"A",link:function($scope,$element){$element.bind("click",function(){$scope.active=!0,$scope.$apply()})}}}),app.directive("openLocationResults",["$mundusMeus",function($mundusMeus){return{restrict:"A",link:function($scope,$element){$element.bind("click",function(){$mundusMeus.openSearchResults()})}}}]),app.factory("$mundusMeus",function($rootScope){var service={};return $rootScope.$on("markerSelected",function(context,model){$rootScope.$broadcast("locationFromMarker",model)}),service.setRadius=function(radius){$rootScope.$broadcast("radiusUpdated",radius)},service.setGeolocation=function(data){$rootScope.$broadcast("locationUpdated",data)},service.toLocation=function(latitude,longitude){$rootScope.$broadcast("positionUpdate",latitude,longitude)},service.openSearchResults=function(){$rootScope.$broadcast("displaySearchResults")},service.highlightMarker=function(model){$rootScope.$broadcast("highlightMarker",model)},service.plotMarkers=function(markers,homeLocation){$rootScope.$broadcast("plotMarkers",markers,homeLocation)},service});